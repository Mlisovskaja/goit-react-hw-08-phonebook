{"version":3,"file":"static/js/492.27cf6bb0.chunk.js","mappings":"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","sources":["components/RegisterForm/fields.js","components/RegisterForm/InitialState.js","components/RegisterForm/RegisterForm.jsx","Pages/RegisterPage/RegisterPage.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/components/shared/FormFields/form-field.module.css?dff7","components/shared/FormFields/FormField.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const fields = {\n    name: {\n        type: \"text\",\n        name: \"name\",\n        required: true,\n        label: \"User name\",\n        placeholder: \"User name\",\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    },\n    email: {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        label: \"User email\",\n        placeholder: \"User email\",\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        label: \"User password\",\n        placeholder: \"User password\",\n    },\n    \n};\n\nexport default fields;","const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n}\n\nexport default initialState;","import { useState } from 'react';\nimport FormField from 'components/shared/FormFields/FormField';\n\nimport fields from './fields';\nimport initialState from './InitialState';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const { name, email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField value={name} handleChange={handleChange} {...fields.name} />\n      <FormField value={email} handleChange={handleChange} {...fields.email} />\n      <FormField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { signup } from '../../redux/auth/auth-operations';\nimport { isUserLogin, getError } from '../../redux/auth/auth-selectors';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const { status } = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    if (status === 400) {\n      alert('You are already authorized');\n    }\n    dispatch(signup(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <div>\n      <h1>Register page</h1>\n      <RegisterForm onSubmit={handleSignup} />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"form-field_label__yseMH\",\"input\":\"form-field_input__1UGh3\",\"field\":\"form-field_field__sFQUE\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport styles from './form-field.module.css';\n\nconst FormField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={styles.field}>\n      <label className={styles.label} htmlFor={id}>\n        {label}\n      </label>\n      <input\n        className={styles.input}\n        id={id}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default FormField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["name","type","required","label","placeholder","pattern","title","email","password","onSubmit","useState","initialState","state","setState","handleChange","target","value","prevState","e","preventDefault","FormField","fields","isLogin","useSelector","isUserLogin","status","getError","dispatch","useDispatch","to","data","alert","signup","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","className","styles","htmlFor","onChange"],"sourceRoot":""}