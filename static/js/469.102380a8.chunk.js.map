{"version":3,"file":"static/js/469.102380a8.chunk.js","mappings":"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","sources":["components/PhoneBookForm/fields.js","components/PhoneBookForm/InitialState.js","webpack://react-homework-template/./src/components/PhoneBookForm/phonebook.module.css?d6dd","components/PhoneBookForm/PhonebookForm.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsList/contacts-list.module.css?256f","components/ContactsList/ContactsList.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","Pages/ContactsPage/ContactsPage.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/components/shared/FormFields/form-field.module.css?dff7","components/shared/FormFields/FormField.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const fields = {\n    name: {\n        type: \"text\",\n        name: \"name\",\n        required: true,\n        label: \"User name\",\n        placeholder: \"User name\",\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    },\n   \n    number: {\n        type: \"tel\",\n        name: \"number\",\n        required: true,\n        label: \"Phone\",\n        placeholder: \"Phone\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n    },\n};\n\nexport default fields;","const initialState = {\n    name: '',\n    number: ''\n}\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"phonebook_wrap__knDGA\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormField from 'components/shared/FormFields/FormField';\nimport fields from './fields';\n\nimport initialState from './InitialState';\nimport styles from './phonebook.module.css';\n\nconst PhonebookForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <div className={styles.wrap}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <h2>Phonebook</h2>\n        <FormField value={name} handleChange={handleChange} {...fields.name} />\n\n        <FormField\n          value={number}\n          handleChange={handleChange}\n          {...fields.number}\n        />\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PhonebookForm;\n\nPhonebookForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FormField from 'components/shared/FormFields/FormField';\n\nconst ContactsFilter = ({ handleChange }) => {\n  return (\n    <div>\n      <h2>Find contact by name</h2>\n      <FormField name=\"filter\" handleChange={handleChange} />\n    </div>\n  );\n};\n\nexport default ContactsFilter;\n\nContactsFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts-list_list__RZXOt\"};","import PropTypes from 'prop-types';\nimport styles from './contacts-list.module.css';\n\nconst ContactsList = ({ deleteName, contacts }) => {\n  const contact = contacts.map(({ id, name, number }) => (\n    <li key={id}>\n      {name}: {number}\n      <button\n        className={styles.btn}\n        onClick={() => deleteName(id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ul className={styles.list}>{contact}</ul>;\n};\n\nexport default ContactsList;\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.propTypes = {\n  deleteName: PropTypes.func.isRequired,\n  contactss: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};\n","export const getAllContacts = ({contacts}) => contacts.items;\nexport const getFilteredContacts = ({contacts, filter}) => {\n    if (!filter) {\n        return contacts.items;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.items.filter(({ name }) => {\n        return name.toLowerCase().includes(normalizedFilter);\n    })\n    \n    return result;\n}\n","export const getFilter = ({filter}) => filter;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport PhonebookForm from '../../components/PhoneBookForm/PhonebookForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactsList from '../../components/ContactsList/ContactsList';\n\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from '../../redux/contacts/contacts-operations';\nimport { setFilter } from '../../redux/filter/filter-slice';\n\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nconst ContactsPage = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContact = ({ name, number }) => {\n    dispatch(addContact({ name, number }));\n  };\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  // const isName = Boolean(filteredContacts.length);\n\n  return (\n    <>\n      <PhonebookForm onSubmit={handleAddContact} />\n      <Filter value={filter} handleChange={handleFilter} />\n      {/* {isName && ( */}\n      <ContactsList\n        deleteName={handleDeleteContact}\n        contacts={filteredContacts}\n      />\n      {/* )} */}\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"form-field_label__yseMH\",\"input\":\"form-field_input__1UGh3\",\"field\":\"form-field_field__sFQUE\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport styles from './form-field.module.css';\n\nconst FormField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={styles.field}>\n      <label className={styles.label} htmlFor={id}>\n        {label}\n      </label>\n      <input\n        className={styles.input}\n        id={id}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default FormField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["name","type","required","label","placeholder","pattern","title","number","onSubmit","useState","initialState","state","setState","handleChange","target","value","prevState","className","styles","e","preventDefault","FormField","fields","ContactsList","deleteName","contact","contacts","map","id","onClick","defaultProps","getFilteredContacts","filter","items","normalizedFilter","toLowerCase","includes","getFilter","filteredContacts","useSelector","dispatch","useDispatch","useEffect","fetchContacts","addContact","Filter","setFilter","deleteContact","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange"],"sourceRoot":""}